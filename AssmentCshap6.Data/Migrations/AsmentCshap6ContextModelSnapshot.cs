// <auto-generated />
using System;
using AssmentCshap6.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssmentCshap6.Data.Migrations
{
    [DbContext(typeof(AsmentCshap6Context))]
    partial class AsmentCshap6ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AssmentCshap6.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles", (string)null);
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.Cnass", b =>
                {
                    b.Property<int>("MaLop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLop"), 1L, 1);

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MaLop");

                    b.ToTable("Lops", (string)null);
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.Monhoc", b =>
                {
                    b.Property<int>("IdMonhoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMonhoc"), 1L, 1);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMonhoc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdMonhoc");

                    b.ToTable("Monhocs", (string)null);
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.Nganh", b =>
                {
                    b.Property<int>("IdNganh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNganh"), 1L, 1);

                    b.Property<string>("TenNganh")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdNganh");

                    b.ToTable("Nganhs", (string)null);
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.School", b =>
                {
                    b.Property<int>("IdSchool")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSchool"), 1L, 1);

                    b.Property<string>("TenTruong")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdSchool");

                    b.ToTable("Schools", (string)null);
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.Sinhvien_Lop", b =>
                {
                    b.Property<Guid>("StudenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Malop")
                        .HasColumnType("int");

                    b.Property<string>("Desctions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudenId", "Malop");

                    b.HasIndex("Malop");

                    b.ToTable("SinhVienInLops", (string)null);
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.SinhVien_MonHoc", b =>
                {
                    b.Property<Guid>("StudenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<decimal>("Diem")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("StudenId", "MaMonHoc");

                    b.HasIndex("MaMonHoc");

                    b.ToTable("SinhVienInMonHocs", (string)null);
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.SinhVien_Nganh", b =>
                {
                    b.Property<Guid>("StudenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdNganh")
                        .HasColumnType("int");

                    b.Property<string>("Desctions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudenId", "IdNganh");

                    b.HasIndex("IdNganh");

                    b.ToTable("SinhVienInNganhs", (string)null);
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.SinhVien_School", b =>
                {
                    b.Property<Guid>("StudenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdSchools")
                        .HasColumnType("int");

                    b.Property<string>("Desctions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudenId", "IdSchools");

                    b.HasIndex("IdSchools");

                    b.ToTable("SinhVienInSchools", (string)null);
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DBO")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("HovsTenDem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.Sinhvien_Lop", b =>
                {
                    b.HasOne("AssmentCshap6.Data.Entities.Cnass", "Cnasss")
                        .WithMany("sinhvien_Lops")
                        .HasForeignKey("Malop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssmentCshap6.Data.Entities.Student", "Students")
                        .WithMany("sinhvien_Lops")
                        .HasForeignKey("StudenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cnasss");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.SinhVien_MonHoc", b =>
                {
                    b.HasOne("AssmentCshap6.Data.Entities.Monhoc", "Monhocs")
                        .WithMany("sinhVien_MonHocs")
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssmentCshap6.Data.Entities.Student", "Students")
                        .WithMany("sinhVien_MonHocs")
                        .HasForeignKey("StudenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Monhocs");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.SinhVien_Nganh", b =>
                {
                    b.HasOne("AssmentCshap6.Data.Entities.Nganh", "Nganhs")
                        .WithMany("sinhVien_Nganhs")
                        .HasForeignKey("IdNganh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssmentCshap6.Data.Entities.Student", "Students")
                        .WithMany("sinhVien_Nganhs")
                        .HasForeignKey("StudenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nganhs");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.SinhVien_School", b =>
                {
                    b.HasOne("AssmentCshap6.Data.Entities.School", "Schools")
                        .WithMany("sinhVien_Schools")
                        .HasForeignKey("IdSchools")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssmentCshap6.Data.Entities.Student", "Students")
                        .WithMany("sinhVien_Schools")
                        .HasForeignKey("StudenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schools");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.Cnass", b =>
                {
                    b.Navigation("sinhvien_Lops");
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.Monhoc", b =>
                {
                    b.Navigation("sinhVien_MonHocs");
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.Nganh", b =>
                {
                    b.Navigation("sinhVien_Nganhs");
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.School", b =>
                {
                    b.Navigation("sinhVien_Schools");
                });

            modelBuilder.Entity("AssmentCshap6.Data.Entities.Student", b =>
                {
                    b.Navigation("sinhVien_MonHocs");

                    b.Navigation("sinhVien_Nganhs");

                    b.Navigation("sinhVien_Schools");

                    b.Navigation("sinhvien_Lops");
                });
#pragma warning restore 612, 618
        }
    }
}
